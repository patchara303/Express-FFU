const express = require("express");
const {
    registerUser,
    loginUser,
    resetPassword,
    getCurrentUserProfile,
    updateCurrentUserProfile,
    getUserOrders,
    getAllUsers,
    getUserById,
    updateUser,
    deleteUser,
    refreshToken,
    openStore
} = require("../controllers/userController");

const { protect, authorizeRoles } = require("../middleware/authMiddleware");
const upload = require("../middleware/uploadMiddleware");
const router = express.Router();

// üìå ‚úÖ ‡πÄ‡∏™‡πâ‡∏ô‡∏ó‡∏≤‡∏á‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ
router.post("/register", registerUser); // ‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å
router.post("/login", loginUser); // ‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô
router.put("/reset-password", protect, resetPassword)
router.get("/profile", protect, getCurrentUserProfile); // ‡∏î‡∏π‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå‡∏ï‡∏±‡∏ß‡πÄ‡∏≠‡∏á
router.put("/profile", protect, upload.fields([{ name: "image", maxCount: 1 },{ name: "imageIdCard", maxCount: 1 }, { name: "promptPayQR", maxCount: 1 }]), updateCurrentUserProfile);
router.get("/orders", protect, getUserOrders); // ‡∏î‡∏π‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠‡∏Ç‡∏≠‡∏á‡∏ï‡∏±‡∏ß‡πÄ‡∏≠‡∏á
router.post("/open-store", protect, openStore); // ‡πÄ‡∏û‡∏¥‡πà‡∏° route ‡πÉ‡∏´‡∏°‡πà
// ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÉ‡∏ô userRoutes.js
router.post("/refresh-token", refreshToken);

// üìå üîí ‡πÄ‡∏™‡πâ‡∏ô‡∏ó‡∏≤‡∏á‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Admin ‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô
router.get("/all", protect, authorizeRoles("admin"), getAllUsers); // ‡∏î‡∏π‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
router.get("/:id", protect, authorizeRoles("admin"), getUserById); // ‡∏î‡∏π‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏à‡∏≤‡∏Å ID
router.put("/:id", protect, authorizeRoles("admin"), updateUser); // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ
router.delete("/:id", protect, authorizeRoles("admin"), deleteUser); // ‡∏•‡∏ö‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ

module.exports = router;
